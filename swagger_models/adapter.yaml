swagger: '2.0'
info:
  description: |
    ENMS Adapter RESTful interface.
  version: 0.3.1
  title: Adapter API
basePath: /
schemes:
  - http
  - https
paths:
  /nes:
    get:
      tags:
        - adpNes
      summary: Get NEs
      description: get NEs from NMS
      produces:
        - application/json
      operationId: getNes  
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpNe'
    post:
      tags:
        - adpNes
      summary: Add NEs
      description: Add a new NE to NMS System
      produces:
        - application/json
      consumes:
        - application/json
      operationId: addNe
      parameters:
        - name: body
          in: body
          description: NE object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/AdpNe'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdpNe'
        '405':
          description: Invalid input
    patch:
      tags:
        - adpNes
      summary: Update NE
      description: 'Update an existing NE. (Jersey doesn''t support Patch,so have to use PUT)'
      produces:
        - application/json
      consumes:
        - application/json
      operationId: updateNe
      parameters:
        - in: body
          name: body
          description: NE object that needs to be updated
          required: false
          schema:
            $ref: '#/definitions/AdpNe'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: NE not found
        '405':
          description: Validation exception
  '/nes/{neid}':
    get:
      tags:
        - adpNes
      summary: Find NE by ID
      description: Returns an NE as per the ID
      produces:
        - application/json
      operationId: getNeById
      parameters:
        - in: path
          name: neid
          description: ID of NE that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AdpNe'
        '400':
          description: Invalid ID supplied
        '404':
          description: NE not found
    delete:
      tags:
        - adpNes
      summary: Delete NE
      description: This can only be done by the logged in user.
      produces:
        - application/json
      operationId: deleteNe
      parameters:
        - in: path
          name: neid
          description: The NE's ID that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: NE not found


  /tps:
    patch:
      tags:
        - adpTps
      summary: Update TP
      description: 'Update an existing TP. (Jersey doesn''t support Patch,so have to use PUT)'
      produces:
        - application/json
      consumes:
        - application/json
      operationId: updateTp
      parameters:
        - in: body
          name: body
          description: TP object that needs to be updated
          required: false
          schema:
            $ref: '#/definitions/AdpTp'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: TP not found
        '405':
          description: Validation exception
          
  '/tps/{tpid}':
    get:
      tags:
        - adpTps
      summary: Find TP by tpid
      description: Returns a TP as per the tpid
      produces:
        - application/json
      operationId: getTpById
      parameters:
        - in: path
          name: tpid
          description: ID of TP that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AdpTp'
        '400':
          description: Invalid tpid supplied
        '404':
          description: TP not found
          
  '/tps/{tpid}/children':
    get:
      tags:
        - adpTps
      summary: Find Children TPs by tpid
      description: Returns Children TPs of tpid
      produces:
        - application/json
      operationId: getChildrenTps
      parameters:
        - in: path
          name: tpid
          description: ID of TP that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpTp'
        '400':
          description: Invalid tpid supplied
        '404':
          description: Children TP not found
  '/tps/ne/{neid}':
    get:
      tags:
        - adpTps
      summary: Find TP by neid
      description: Returns a TP as per the neid
      produces:
        - application/json
      operationId: getTpsByNeId
      parameters:
        - in: path
          name: neid
          description: NEID of TP that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpTp'
        '400':
          description: Invalid NE ID supplied
        '404':
          description: TP not found
  '/tps/ne/{neid}/type/{tptype}':
    get:
      tags:
        - adpTps
      summary: Get ports
      description: Get the ports with queries
      produces:
        - application/json
      operationId: getTpsByType
      parameters:
        - name: neid
          in: path
          required: true
          description: the neid to query
          type: string
        - name: tptype
          in: path
          required: true
          description: the TP type to query
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpTp'
        '400':
          description: Invalid tpid supplied
        '404':
          description: TP not found
  '/tps/ne/{neid}/layer_rate/{layerrate}':
    get:
      tags:
        - adpTps
      summary: Find TPs by layerrate
      description: Returns TPs as per the layerrate
      produces:
        - application/json
      operationId: getTpsByLayerRate
      parameters:
        - in: path
          name: neid
          description: NEID of TP that needs to be fetched
          required: true
          type: string
        - in: path
          name: layerrate
          description: Layer Rate of TPs
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpTp'
        '400':
          description: Invalid Layer Rate supplied
        '404':
          description: TP not found
          
  '/equipments/{eqid}':
    get:
      tags:
        - adpEquipments
      summary: Find equipments by equipmentid
      description: Returns an equipment as per the eqid
      produces:
        - application/json
      operationId: getEquipmentById
      parameters:
        - in: path
          name: eqid
          description: ID of Equipment that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AdpEquipment'
        '400':
          description: Invalid Equipment ID supplied
        '404':
          description: Equipment not found
  '/equipments/ne/{neid}':
    get:
      tags:
        - adpEquipments
      summary: Find equipments that belong to NE with neid
      description: Returns equipments as per the neid
      produces:
        - application/json
      operationId: getEquipmentsByNeId
      parameters:
        - in: path
          name: neid
          description: Equipments of NE that need to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpEquipment'
        '400':
          description: Invalid NE ID supplied
        '404':
          description: Equipment not found
          
  /xcs:
    post:
      tags:
        - adpXcs
      summary: Create XCs
      description: create XC
      produces:
        - application/json
      consumes:
        - application/json
      operationId: createXc
      parameters:
        - name: body
          in: body
          description: XC object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/AdpXc'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdpXc'
        '405':
          description: Invalid input
  /xcs/{xcid}:
    get:
      tags:
        - adpXcs
      summary: Find XC by ID
      description: Returns an XC as per the ID
      produces:
        - application/json
      operationId: getXcById
      parameters:
        - in: path
          name: xcid
          description: ID of XC that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AdpXc'
        '400':
          description: Invalid ID supplied
        '404':
          description: XC not found
    delete:
      tags:
        - adpXcs
      summary: Delete XC
      description: This can only be done by the logged in user.
      produces:
        - application/json
      operationId: deleteXc
      parameters:
        - in: path
          name: xcid
          description: The XC ID that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: XC not found
  /xcs/ne/{neid}:
    get:
      tags:
        - adpXcs
      summary: Find XC by ID
      description: Returns an XC as per the ID
      produces:
        - application/json
      operationId: getXcsByNeId
      parameters:
        - in: path
          name: neid
          description: ID of NE that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpXc'
        '400':
          description: Invalid ID supplied
        '404':
          description: XC not found
    delete:
      tags:
        - adpXcs
      summary: Delete XC
      description: This can only be done by the logged in user.
      produces:
        - application/json
      operationId: deleteXcsByNeId
      parameters:
        - in: path
          name: neid
          description: The XC ID that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: XC not found
          
  '/xcs/tpid/{tpid}':
    get:
      tags:
        - adpXcs
      summary: Query XCs of TP
      description: get XCs under TP
      produces:
        - application/json
      operationId: findXcs
      parameters:
        - name: tpid
          in: path
          type: string
          required: true
          description: TP ID to query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpXc'
        '400':
          description: Invalid ID supplied
        '404':
          description: XC not found

  /terminations/{ctpid}:
    get:
      tags:
        - adpTps
      summary: Terminate CTP
      description: Terminate CTP to sub-CTPs, currently only support 2M
      produces:
        - application/json
      operationId: terminateCtp
      parameters:
        - name: ctpid
          in: path
          type: string
          required: true
          description: CTP ID to terminate
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdpTp'
        304:
          description: CTP terminate failed.
        '400':
          description: Invalid CTP ID supplied
        '404':
          description: CTP not found

  /enms/statuses/ping:
    get:
      tags:
        - adpSystem
      summary: Heart Beat
      description: ENMS heart beat, to check the system health status
      produces:
        - application/json
      operationId: ping
      responses:
        '200':
          description: OK

          
definitions:
      
  AdpNe:
    type: object
    description: the NE model for Adapter
#    required:
#      - userLabel
#      - neType
    properties:
      id:
        type: string
        description: NE id, will be uuid later
      keyOnNe:
        type: string
        description: for Q3 NE it's moi , after setting it's read only
#      adapterType:
#        type: string
#        description: 'needed adapter type, include ALUQ3, pureSNMP,TL1, CLI etc.'
      userLabel:
        type: string
        example: NE01/01
 #     nativeName:
 #       type: string
      neType:
        type: string
        example: 1662mc
 #     techDomain:
 #       type: string
 #       description: the domain of NE technologies
 #       example: SDH|MSTP|PTN|OTN|IP|…
      version:
        type: string
#      address:
#        type: string
#        example: 4.700058e+23
#      addressType:
#        type: string
#        example: Q3|IPv4Telnet|IPv4SNMPv2|IPv4SNMPv3…
      addresses:
        $ref: "#/definitions/Addresses"
      adminState:
        type: string
      operationState:
        type: string
        default: synchState
        enum:
        - supervisionState
        - communicationState
        - synchState
        - maintenanceState
        - operationalState
#      communicationStatus:
#        type: string
#        example: reachable/unreachable
#      alignmentStatus:
#        type: string
#        example: aligned/misaligned
#      loginName:
#        type: string
#        example: admin
#      password:
#        type: string
#        example: pwd
#      coordinates:
#        $ref: "#/definitions/Coordinates"
      locationName:
        type: string
#      extraInfo:
#        type: object
#        properties:
#           tmp:
#             type: string

  AdpTp:
    type: object
    description: the TP model for Adapter
    properties:
      id:
        type: string
        description: neId + keyOnNE, will use uuid later
      keyOnNe:
        type: string
        description: th TP's key on NE, for Q3 NE include moi value without NE part
      neId:
        type: string
        description: Ne's ID
      parentTpId:
        description: The parent TP id for CTP case.
        type: string
      userLabel:
        type: string
        example: NE001/Port1
      nativeName:
        type: string
      layerRates:
        type: array
        description: the layerRates, the first one is key layerRate
        items:
          type: string
      tpType:
        type: string
        example: ptp, ctp, ftp
      adminState:
        type: string
        description: locked, unlocked
      operationalState:
        type: string
        description: enabled, disabled
#      usedByConnection:
#        type: string
#        default: "free"
#        description: |
#          Connection id that using the TP
#          'free' - TP not used; 
#          'xc' - TP occupied by XC, but this XC not belongs to connection
#          >0 - real connection ID
#      reservedBy:
#        type: string
#        description: |
#          Before creating XC for CTP, reserve it first in DB by Controller, to avoid
#          contention from other tasks. Use taskid or other info.
#          When deleting an XC, need to clear this attribute.
      tpgMembers:
        type: array
        items:
          type: string
#      comment:
#        type: string

  AdpEquipment:
    type: object
    description: the Equipment model for Adapter
#    required:
#      - neId
    properties:
      id:
        type: string
      aid:
        type: string
        example: NE001/Board1
      neId:
        type: string
      userLabel:
        type: string
      nativeName:
        type: string
      addresses:
        $ref: "#/definitions/Addresses"
        
  AdpXc:
    type: object
    description: the XC model for Adapter
    properties:
      id:
        type: string
      aid:
        type: string
      neId:
        type: string
#      ne:
#        $ref: '#/definitions/NE'
      layerrate:
        type: string
      atps:
        type: array
        description: the list of TP IDs
        items:
          type: string
#          $ref: '#/definitions/TP'
      ztps:
        type: array
        description: the list of TP IDs
        items:
          type: string
#          $ref: '#/definitions/TP'
#      usedByConnection:
#        type: string
#        description: |
#          Connection id that using the TPdadd
#          -1 - XC not used, isolated XC, need to be cleaned by NMS 
#          0 - not valid, don't use this value
#          >0 - real connection ID
      implStatus:
        type: string

  Addresses:
    type: object
    description: 'The Addresses of NE, Equipment'
    properties:
      q3Address:
        $ref: '#/definitions/Q3Address'
      tl1Address:
        type: array
        items:
          type: string
      snmpAddress:
        $ref: '#/definitions/SnmpAddress'
  SnmpAddress:
    type: object
    properties:
      snmpAgent:
        type: string
      snmpTraps:
        type: array
        items:
          type: string
  Q3Address:
    type: object
    properties:
      address:
        type: string
      osMain:
        type: string
      osSpare:
        type: string

#  Message:
#    type: object
#    properties:
#      sender:
#        type: string
#        description: 'the info of sender, for example: adapter-1 '
#      messageType:
#        type: string
#        description: notification or alarm
#      sendTime:
#        type: string
#      notification:
#        $ref: '#/definitions/Notification'
#      alarm:
#        $ref: '#/definitions/Alarm'    
#
#  Notification:
#    type: object
#    properties:
#      type:
#        type: string
#        description: the overall notification type, add,delete or update
#      objectType:
#        type: string
#        description: 'the object type of the notification: NE, Board, TP, Connection'
#      objectID:
#        type: string
#        description: the ID of the target Object.
#      details:
#        type: array
#        items:
#          $ref: '#/definitions/NotificationDetail'
#          
#  NotificationDetail:
#    type: object
#    properties:
#      type:
#        type: string
#        description: 'the change type of the detail field: add, delete or update'
#      key:
#        type: string
#      value:
#        type: string
#      oldValue:
#        type: string
#          
#  Alarm:
#    type: object
#    properties:
#      alarmCode:
#        type: string
#      alarmType:
#        type: string
#      severity:
#        type: string
#        description: severity of alarm, MAJOR, MINOR,CRITICAL,INFO,WARNING
#      occureTime:
#        type: string
#      clearTime:
#        type: string
#      probableCause:
#        type: string
#      objectType:
#        type: string
#        description: the object type of the alarm
#      moc:
#        type: string
#        description: the management object class
#      alarmObject:
#        type: string
#      ackStatus:
#        type: string
#        description: acknowledgement status, true or false
#      resvStatus:
#        type: string
#        description: reservation status
#      description:
#        type: string

#  Coordinates:
#    type: object
#    description: The coordinates of the NE
#    properties:
#      geo:
#        type: object
#        properties:
#          longitude:
#            type: string
#          latitude:
#            type: string
#      coordinate:
#        type: object
#        properties:
#          x:
#            type: string
#          y:
#            type: string              
    
#  SupportedNe:
#    type: object
#    properties:
#      neType:
#        type: string
#      versions:
#        type: array
#        items:
#          type: string
#      protocols:
#        type: array
#        items:
#          type: string
